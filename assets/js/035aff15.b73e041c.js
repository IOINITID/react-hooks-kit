"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8843],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6990:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),i=["components"],s={sidebar_position:1},l="useModalState",c={unversionedId:"hooks/state/use-modal-state",id:"hooks/state/use-modal-state",isDocsHomePage:!1,title:"useModalState",description:"What is it needed for",source:"@site/docs/hooks/state/use-modal-state.md",sourceDirName:"hooks/state",slug:"/hooks/state/use-modal-state",permalink:"/react-hooks-kit/docs/hooks/state/use-modal-state",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/hooks/state/use-modal-state.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Features",permalink:"/react-hooks-kit/docs/features"},next:{title:"useToggle",permalink:"/react-hooks-kit/docs/hooks/state/use-toggle"}},p=[{value:"What is it needed for",id:"what-is-it-needed-for",children:[]},{value:"Advantages",id:"advantages",children:[]},{value:"How to start using",id:"how-to-start-using",children:[]},{value:"Options",id:"options",children:[]}],d={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"usemodalstate"},"useModalState"),(0,r.kt)("h2",{id:"what-is-it-needed-for"},"What is it needed for"),(0,r.kt)("p",null,"You can use it to manage the state of your modals faster and more flexibly. Both our own and ready-made libraries."),(0,r.kt)("h2",{id:"advantages"},"Advantages"),(0,r.kt)("p",null,"When we write modals, a lot of boilerplate code is generated, for example, to create states for working with a modal window, we need to write something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\n\nconst Component = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onOpen = () => setIsOpen(true);\n  const onClose = () => setIsOpen(false);\n\n  // Button component\n  <Button onClick={onOpen}>Open modal window</Button>\n\n  // Modal window component\n  <Modal isOpen={isOpen} onClose={onClose}>\n    // Component code...\n  </Modal>\n};\n")),(0,r.kt)("p",null,"From the example above, you can see how much needs to be written to manage a single state. By using ",(0,r.kt)("strong",{parentName:"p"},"useModalState"),", you don't need to write extra code or create extra states inside your component."),(0,r.kt)("h2",{id:"how-to-start-using"},"How to start using"),(0,r.kt)("p",null,"In order to start using this hook, you need to import it into your project:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { useModalState } from 'react-hooks-kit';\n\nconst Component = () => {\n  const { isOpen, onOpen, onClose, onToggle } = useModalState();\n\n   // Button component\n  <Button onClick={onOpen}>Open modal window</Button>\n\n   // Modal window component\n  <Modal isOpen={isOpen} onClose={onClose}>\n   // Component code...\n  </Modal>\n};\n")),(0,r.kt)("p",null,"You can also set the initial state for the modal window:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { useModalState } from 'react-hooks-kit';\n\nconst Component = () => {\n  const { isOpen, onOpen, onClose, onToggle } = useModalState({ initialIsOpen: true });\n\n   // Button component\n  <Button onClick={onOpen}>Open modal window</Button>\n\n   // Modal window component\n  <Modal isOpen={isOpen} onClose={onClose}>\n   // Component code...\n  </Modal>\n};\n")),(0,r.kt)("p",null,"This will open it by default."),(0,r.kt)("p",null,"The following functions are available for working with the state of the modal window:"),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"isOpen"),(0,r.kt)("td",{parentName:"tr",align:"center"},"boolean"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Returns the open state of the modal window.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"onOpen"),(0,r.kt)("td",{parentName:"tr",align:"center"},"() => void"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Function for opening a modal window.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"onClose"),(0,r.kt)("td",{parentName:"tr",align:"center"},"() => void"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Function to close the modal window.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"onToggle"),(0,r.kt)("td",{parentName:"tr",align:"center"},"() => void"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Toggles the state of the modal to the opposite.")))))}u.isMDXComponent=!0}}]);