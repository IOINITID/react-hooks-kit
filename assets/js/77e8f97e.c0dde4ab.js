"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[571],{6581:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return l},default:function(){return m}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_position:2},u="useRemount",c={unversionedId:"hooks/lifecycles/use-remount",id:"hooks/lifecycles/use-remount",isDocsHomePage:!1,title:"useRemount",description:"What is it needed for",source:"@site/docs/hooks/lifecycles/use-remount.md",sourceDirName:"hooks/lifecycles",slug:"/hooks/lifecycles/use-remount",permalink:"/react-hooks-kit/docs/hooks/lifecycles/use-remount",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/hooks/lifecycles/use-remount.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"useRenderCount",permalink:"/react-hooks-kit/docs/hooks/lifecycles/use-render-count"},next:{title:"useLocalStorage",permalink:"/react-hooks-kit/docs/hooks/browser/use-local-storage"}},l=[{value:"What is it needed for",id:"what-is-it-needed-for",children:[]},{value:"Advantages",id:"advantages",children:[]},{value:"How to start using",id:"how-to-start-using",children:[]},{value:"Options",id:"options",children:[]}],d={toc:l};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"useremount"},"useRemount"),(0,a.kt)("h2",{id:"what-is-it-needed-for"},"What is it needed for"),(0,a.kt)("p",null,"If you need to manually remount your component. This can be useful when you need to update the data of a component, regardless of its state."),(0,a.kt)("h2",{id:"advantages"},"Advantages"),(0,a.kt)("p",null,"To implement this feature, the basic features of React are used, which is guaranteed to work on all versions and in any applications made on React."),(0,a.kt)("h2",{id:"how-to-start-using"},"How to start using"),(0,a.kt)("p",null,"In order to start using this hook, you need to import it into your project:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { useRemount } from 'react-hooks-kit';\n\nconst Component = () => {\n  const {key, onRemount} = useRemount();\n\n  // Button for remounting the component\n  <Button onClick={onRemount}>Remount component</Button>\n  \n  // You need to add to the key property\n  <ComponentToRemount key={key} />\n};\n")),(0,a.kt)("p",null,"When the button is clicked, the ",(0,a.kt)("strong",{parentName:"p"},"ComponentToRemount")," will be remounted."),(0,a.kt)("p",null,"The following functions are available for operation:"),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"key"),(0,a.kt)("td",{parentName:"tr",align:"center"},"number"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Returns the initial state of key.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"onRemount"),(0,a.kt)("td",{parentName:"tr",align:"center"},"() => void"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Function for changing the state of key.")))))}m.isMDXComponent=!0}}]);